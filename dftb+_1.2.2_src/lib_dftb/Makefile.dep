charge_constraints.o: charge_constraints.F90 _mod_accuracy assert.h allocate.h
charge_constraints.o = charge_constraints.o $(_mod_accuracy) $(assert.h) $(allocate.h)
_mod_chargeconstraints: charge_constraints.o
_mod_chargeconstraints = $(charge_constraints.o)

constraints.o: constraints.F90 _mod_accuracy _mod_commontypes assert.h allocate.h _mod_angmomentum
constraints.o = constraints.o $(_mod_accuracy) $(_mod_commontypes) $(assert.h) $(allocate.h) $(_mod_angmomentum)
_mod_elecconstraints: constraints.o
_mod_elecconstraints = $(constraints.o)

#ifdef EXTERNALERFC
coulomb.o: coulomb.F90 _mod_accuracy _mod_constants assert.h allocate.h _mod_message _mod_external_erfc
coulomb.o = coulomb.o $(_mod_accuracy) $(_mod_constants) $(assert.h) $(allocate.h) $(_mod_message) $(_mod_external_erfc)
_mod_coulomb: coulomb.o
_mod_coulomb = $(coulomb.o)
#else
coulomb.o: coulomb.F90 _mod_accuracy _mod_constants assert.h allocate.h _mod_message
coulomb.o = coulomb.o $(_mod_accuracy) $(_mod_constants) $(assert.h) $(allocate.h) $(_mod_message)
_mod_coulomb: coulomb.o
_mod_coulomb = $(coulomb.o)
#endif

densitymatrix.o: densitymatrix.F90 _mod_commontypes allocate.h _mod_sorting assert.h _mod_blasroutines _mod_accuracy
densitymatrix.o = densitymatrix.o $(_mod_commontypes) $(allocate.h) $(_mod_sorting) $(assert.h) $(_mod_blasroutines) $(_mod_accuracy)
_mod_densitymatrix: densitymatrix.o
_mod_densitymatrix = $(densitymatrix.o)

dftb_pls_u.o: dftb_pls_u.F90 _mod_commontypes _mod_fileid assert.h _mod_spin _mod_message _mod_eigensolver _mod_accuracy
dftb_pls_u.o = dftb_pls_u.o $(_mod_commontypes) $(_mod_fileid) $(assert.h) $(_mod_spin) $(_mod_message) $(_mod_eigensolver) $(_mod_accuracy)
_mod_dftbplsu: dftb_pls_u.o
_mod_dftbplsu = $(dftb_pls_u.o)

#ifdef EXTERNALERFC
disp_common.o: disp_common.F90 _mod_constants _mod_sorting assert.h _mod_message _mod_simplealgebra _mod_accuracy _mod_external_erfc
disp_common.o = disp_common.o $(_mod_constants) $(_mod_sorting) $(assert.h) $(_mod_message) $(_mod_simplealgebra) $(_mod_accuracy) $(_mod_external_erfc)
_mod_dispcommon: disp_common.o
_mod_dispcommon = $(disp_common.o)
#else
disp_common.o: disp_common.F90 _mod_constants _mod_sorting assert.h _mod_message _mod_simplealgebra _mod_accuracy
disp_common.o = disp_common.o $(_mod_constants) $(_mod_sorting) $(assert.h) $(_mod_message) $(_mod_simplealgebra) $(_mod_accuracy)
_mod_dispcommon: disp_common.o
_mod_dispcommon = $(disp_common.o)
#endif

disp_slaterkirkwood.o: disp_slaterkirkwood.F90 allocate.h assert.h _mod_dispcommon _mod_periodic _mod_accuracy _mod_constants
disp_slaterkirkwood.o = disp_slaterkirkwood.o $(allocate.h) $(assert.h) $(_mod_dispcommon) $(_mod_periodic) $(_mod_accuracy) $(_mod_constants)
_mod_dispslaterkirkwood: disp_slaterkirkwood.o
_mod_dispslaterkirkwood = $(disp_slaterkirkwood.o)

disp_uff.o: disp_uff.F90 allocate.h assert.h _mod_dispcommon _mod_periodic _mod_accuracy _mod_constants
disp_uff.o = disp_uff.o $(allocate.h) $(assert.h) $(_mod_dispcommon) $(_mod_periodic) $(_mod_accuracy) $(_mod_constants)
_mod_dispuff: disp_uff.o
_mod_dispuff = $(disp_uff.o)

disp_uff_data.o: disp_uff_data.F90 _mod_message _mod_accuracy _mod_constants _mod_charmanip
disp_uff_data.o = disp_uff_data.o $(_mod_message) $(_mod_accuracy) $(_mod_constants) $(_mod_charmanip)
_mod_dispuffdata: disp_uff_data.o
_mod_dispuffdata = $(disp_uff_data.o)

dispersion.o: dispersion.F90 allocate.h assert.h _mod_dispuff _mod_periodic _mod_dispslaterkirkwood _mod_accuracy
dispersion.o = dispersion.o $(allocate.h) $(assert.h) $(_mod_dispuff) $(_mod_periodic) $(_mod_dispslaterkirkwood) $(_mod_accuracy)
_mod_dispersion: dispersion.o
_mod_dispersion = $(dispersion.o)

em.o: em.F90 _mod_commontypes allocate.h assert.h _mod_angmomentum _mod_simplealgebra _mod_accuracy _mod_constants
em.o = em.o $(_mod_commontypes) $(allocate.h) $(assert.h) $(_mod_angmomentum) $(_mod_simplealgebra) $(_mod_accuracy) $(_mod_constants)
_mod_emfields: em.o
_mod_emfields = $(em.o)

etemp.o: etemp.F90 _mod_hermite allocate.h _mod_external_erfc assert.h _mod_factorial _mod_message _mod_accuracy _mod_constants
etemp.o = etemp.o $(_mod_hermite) $(allocate.h) $(_mod_external_erfc) $(assert.h) $(_mod_factorial) $(_mod_message) $(_mod_accuracy) $(_mod_constants)
_mod_etemp: etemp.o
_mod_etemp = $(etemp.o)

extcharge.o: extcharge.F90 _mod_constants assert.h _mod_coulomb _mod_blasroutines _mod_periodic _mod_accuracy allocate.h
extcharge.o = extcharge.o $(_mod_constants) $(assert.h) $(_mod_coulomb) $(_mod_blasroutines) $(_mod_periodic) $(_mod_accuracy) $(allocate.h)
_mod_externalcharges: extcharge.o
_mod_externalcharges = $(extcharge.o)

forces.o: forces.F90 _mod_commontypes allocate.h assert.h _mod_scc _mod_nonscc _mod_accuracy _mod_slakocont
forces.o = forces.o $(_mod_commontypes) $(allocate.h) $(assert.h) $(_mod_scc) $(_mod_nonscc) $(_mod_accuracy) $(_mod_slakocont)
_mod_forces: forces.o
_mod_forces = $(forces.o)

nonscc.o: nonscc.F90 _mod_accuracy _mod_commontypes _mod_sk assert.h _mod_slakocont
nonscc.o = nonscc.o $(_mod_accuracy) $(_mod_commontypes) $(_mod_sk) $(assert.h) $(_mod_slakocont)
_mod_nonscc: nonscc.o
_mod_nonscc = $(nonscc.o)

orbital_equiv.o: orbital_equiv.F90 _mod_accuracy _mod_commontypes assert.h allocate.h
orbital_equiv.o = orbital_equiv.o $(_mod_accuracy) $(_mod_commontypes) $(assert.h) $(allocate.h)
_mod_orbitalequiv: orbital_equiv.o
_mod_orbitalequiv = $(orbital_equiv.o)

periodic.o: periodic.F90 _mod_lapackroutines _mod_memman allocate.h _mod_sorting _mod_message _mod_bisect _mod_commontypes _mod_linkedlist _mod_simplealgebra _mod_accuracy assert.h _mod_constants
periodic.o = periodic.o $(_mod_lapackroutines) $(_mod_memman) $(allocate.h) $(_mod_sorting) $(_mod_message) $(_mod_bisect) $(_mod_commontypes) $(_mod_linkedlist) $(_mod_simplealgebra) $(_mod_accuracy) $(assert.h) $(_mod_constants)
_mod_periodic: periodic.o
_mod_periodic = $(periodic.o)

populations.o: populations.F90 _mod_commontypes allocate.h assert.h _mod_periodic _mod_accuracy _mod_constants
populations.o = populations.o $(_mod_commontypes) $(allocate.h) $(assert.h) $(_mod_periodic) $(_mod_accuracy) $(_mod_constants)
_mod_populations: populations.o
_mod_populations = $(populations.o)

rep_cont.o: rep_cont.F90 _mod_accuracy _mod_reppoly assert.h allocate.h _mod_repspline
rep_cont.o = rep_cont.o $(_mod_accuracy) $(_mod_reppoly) $(assert.h) $(allocate.h) $(_mod_repspline)
_mod_repcont: rep_cont.o
_mod_repcont = $(rep_cont.o)

rep_poly.o: rep_poly.F90 _mod_accuracy _mod_bisect assert.h allocate.h
rep_poly.o = rep_poly.o $(_mod_accuracy) $(_mod_bisect) $(assert.h) $(allocate.h)
_mod_reppoly: rep_poly.o
_mod_reppoly = $(rep_poly.o)

rep_spline.o: rep_spline.F90 _mod_accuracy _mod_bisect assert.h allocate.h
rep_spline.o = rep_spline.o $(_mod_accuracy) $(_mod_bisect) $(assert.h) $(allocate.h)
_mod_repspline: rep_spline.o
_mod_repspline = $(rep_spline.o)

repulsive.o: repulsive.F90 _mod_accuracy assert.h _mod_repcont
repulsive.o = repulsive.o $(_mod_accuracy) $(assert.h) $(_mod_repcont)
_mod_repulsive: repulsive.o
_mod_repulsive = $(repulsive.o)

scc.o: scc.F90 _mod_commontypes _mod_fileid allocate.h _mod_accuracy _mod_coulomb _mod_blasroutines _mod_externalcharges _mod_message _mod_periodic _mod_shift _mod_chargeconstraints _mod_short_gamma assert.h _mod_constants
scc.o = scc.o $(_mod_commontypes) $(_mod_fileid) $(allocate.h) $(_mod_accuracy) $(_mod_coulomb) $(_mod_blasroutines) $(_mod_externalcharges) $(_mod_message) $(_mod_periodic) $(_mod_shift) $(_mod_chargeconstraints) $(_mod_short_gamma) $(assert.h) $(_mod_constants)
_mod_scc: scc.o
_mod_scc = $(scc.o)

scc_init.o: scc_init.F90 _mod_commontypes _mod_charmanip allocate.h _mod_fileid _mod_message _mod_accuracy assert.h
scc_init.o = scc_init.o $(_mod_commontypes) $(_mod_charmanip) $(allocate.h) $(_mod_fileid) $(_mod_message) $(_mod_accuracy) $(assert.h)
_mod_scc_init: scc_init.o
_mod_scc_init = $(scc_init.o)

shift.o: shift.F90 _mod_accuracy _mod_commontypes assert.h
shift.o = shift.o $(_mod_accuracy) $(_mod_commontypes) $(assert.h)
_mod_shift: shift.o
_mod_shift = $(shift.o)

short_gamma.o: short_gamma.F90 _mod_message _mod_accuracy
short_gamma.o = short_gamma.o $(_mod_message) $(_mod_accuracy)
_mod_short_gamma: short_gamma.o
_mod_short_gamma = $(short_gamma.o)

sk.o: sk.F90 _mod_accuracy _mod_commontypes assert.h
sk.o = sk.o $(_mod_accuracy) $(_mod_commontypes) $(assert.h)
_mod_sk: sk.o
_mod_sk = $(sk.o)

slako_cont.o: slako_cont.F90 _mod_accuracy _mod_slakoeqgrid assert.h allocate.h
slako_cont.o = slako_cont.o $(_mod_accuracy) $(_mod_slakoeqgrid) $(assert.h) $(allocate.h)
_mod_slakocont: slako_cont.o
_mod_slakocont = $(slako_cont.o)

slako_eq_grid.o: slako_eq_grid.F90 _mod_accuracy _mod_message assert.h allocate.h _mod_interpolation
slako_eq_grid.o = slako_eq_grid.o $(_mod_accuracy) $(_mod_message) $(assert.h) $(allocate.h) $(_mod_interpolation)
_mod_slakoeqgrid: slako_eq_grid.o
_mod_slakoeqgrid = $(slako_eq_grid.o)

sparse2dense.o: sparse2dense.F90 _mod_commontypes _mod_memman allocate.h assert.h _mod_periodic _mod_accuracy _mod_constants
sparse2dense.o = sparse2dense.o $(_mod_commontypes) $(_mod_memman) $(allocate.h) $(assert.h) $(_mod_periodic) $(_mod_accuracy) $(_mod_constants)
_mod_sparse2dense: sparse2dense.o
_mod_sparse2dense = $(sparse2dense.o)

spin.o: spin.F90 _mod_accuracy _mod_commontypes assert.h _mod_shift _mod_message
spin.o = spin.o $(_mod_accuracy) $(_mod_commontypes) $(assert.h) $(_mod_shift) $(_mod_message)
_mod_spin: spin.o
_mod_spin = $(spin.o)

spinorbit.o: spinorbit.F90 _mod_accuracy _mod_commontypes assert.h allocate.h _mod_angmomentum
spinorbit.o = spinorbit.o $(_mod_accuracy) $(_mod_commontypes) $(assert.h) $(allocate.h) $(_mod_angmomentum)
_mod_spinorbit: spinorbit.o
_mod_spinorbit = $(spinorbit.o)

stressTensor.o: stressTensor.F90 _mod_commontypes allocate.h assert.h _mod_repcont _mod_scc _mod_nonscc _mod_accuracy _mod_slakocont
stressTensor.o = stressTensor.o $(_mod_commontypes) $(allocate.h) $(assert.h) $(_mod_repcont) $(_mod_scc) $(_mod_nonscc) $(_mod_accuracy) $(_mod_slakocont)
_mod_stress: stressTensor.o
_mod_stress = $(stressTensor.o)

thirdorder.o: thirdorder.F90 _mod_short_gamma _mod_accuracy assert.h allocate.h _mod_periodic
thirdorder.o = thirdorder.o $(_mod_short_gamma) $(_mod_accuracy) $(assert.h) $(allocate.h) $(_mod_periodic)
_mod_thirdorder: thirdorder.o
_mod_thirdorder = $(thirdorder.o)

